ARG TRT_CONTAINER_VERSION=22.03
FROM nvcr.io/nvidia/tensorrt:${TRT_CONTAINER_VERSION}-py3

ARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime
ARG ONNXRUNTIME_BRANCH=master
ARG CMAKE_CUDA_ARCHITECTURES=37;50;52;60;61;70;75;80

RUN apt-get update &&\
    apt-get install -y sudo git bash unattended-upgrades
RUN unattended-upgrade

WORKDIR /code

RUN pip install pyyaml typing_extensions

RUN git clone --single-branch --branch v1.11.0  --recursive https://github.com/pytorch/pytorch &&\
    cd pytorch && RELEASE=1 python setup.py install

RUN git clone --single-branch --branch pengwa/cuda_116 --recursive https://github.com/pengwa/FBGEMM.git &&\
    cd FBGEMM && git submodule sync && git submodule update --init --recursive &&\
    mkdir build && cd build && cmake .. && make

RUN pip install hypothesis Jinja2 ninja numpy scikit-build
ENV CUDA_BIN_PATH=/usr/local/cuda/
ENV CUDACXX=/usr/local/cuda/bin/nvcc
RUN cd /code/FBGEMM/fbgemm_gpu && git submodule sync && git submodule update --init --recursive &&\
    python setup.py install -DTORCH_CUDA_ARCH_LIST="7.0;8.0"

RUN git clone --single-branch --branch pengwa/cf --recursive https://github.com/pengwa/torchrec &&\
    cd torchrec && python setup.py install develop --skip_fbgemm --fbgemm_gpu_dir /code/FBGEMM/fbgemm_gpu

# Dependencies: cmake
RUN wget --quiet https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-linux-x86_64.tar.gz &&\
    tar zxf cmake-3.21.0-linux-x86_64.tar.gz && rm -rf cmake-3.21.0-linux-x86_64.tar.gz

# Prepare onnxruntime repository & build onnxruntime with TensorRT
RUN git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime &&\
    cd onnxruntime &&\
    /bin/sh build.sh --parallel --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_tensorrt --tensorrt_home /usr/lib/x86_64-linux-gnu/ --config Release --build_wheel --enable_training_torch_interop --skip_tests --skip_submodule_sync --cmake_extra_defines '"CMAKE_CUDA_ARCHITECTURES='${CMAKE_CUDA_ARCHITECTURES}'"' &&\
    pip install /code/onnxruntime/build/Linux/Release/dist/*.whl &&\
    cd ..
